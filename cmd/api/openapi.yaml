openapi: 3.0.3
info:
  title: Company Microservice API
  version: 1.0.0

paths:
  /login:
    post:
      summary: for demo purposes, username is hardcoded to jon and password to shhh!
      responses:
        '200':
          description: logged
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
  /companies:
    post:
      security:
        - bearerAuth: [ ]
      summary: Create a new company
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInput'
      responses:
        '201':
          description: Company created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyOutput'

  /companies/{companyId}:
    get:
      summary: Get a specific company
      parameters:
        - name: companyId
          in: path
          description: ID of the company to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Company found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyOutput'
        '404':
          description: Company not found
    patch:
      security:
        - bearerAuth: [ ]
      summary: Update a specific company
      parameters:
        - name: companyId
          in: path
          description: ID of the company to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInput'
      responses:
        '200':
          description: Company updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyOutput'
        '404':
          description: Company not found
    delete:
      security:
        - bearerAuth: [ ]
      summary: Delete a specific company
      parameters:
        - name: companyId
          in: path
          description: ID of the company to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Company deleted successfully
        '404':
          description: Company not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginInput:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    CompanyInput:
      type: object
      properties:
        name:
          type: string
          maxLength: 15
          minLength: 1
        description:
          type: string
          maxLength: 3000
        employees:
          type: integer
        registered:
          type: boolean
        type:
          type: string
          enum:
            - Corporations
            - NonProfit
            - Cooperative
            - Sole Proprietorship
      required:
        - name
        - employees
        - registered
        - type
    CompanyOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 15
          minLength: 1
        description:
          type: string
          maxLength: 3000
        employees:
          type: integer
        registered:
          type: boolean
        type:
          type: string
          enum:
            - Corporations
            - NonProfit
            - Cooperative
            - Sole Proprietorship
      required:
        - id
        - name
        - employees
        - registered
        - type
